targets:
  $default:
    builders:
#      auto_route_generator:auto_router_generator: # this for @AutoRouterConfig
#        options:
#          enable_cached_builds: true
#        generate_for:
#          - lib/app_routes/app_router.dart
##      auto_route_generator:auto_route_generator:
##        options:
##          enable_cached_builds: true
##        generate_for:
##          - lib/**/*.page.dart
##          - lib/**/*.view.dart
      freezed|freezed:
        enabled: true
        generate_for:
          - lib/core/**/*.data.dart
          - lib/core/**/*.dart
          - lib/data/model/*.data.dart
        options:
          json: false
#      mockito|mockBuilder:
#        enabled: true
#        generate_for:
#          - test/mocks/generate_mocks.dart
      riverpod_generator:
        enabled: true
        generate_for:
          - lib/**/application/*.dart
          - lib/core/*.provider.dart
          - lib/core/**/*.provider.dart
          - lib/data/*.provider.dart
          - lib/data/**/*.provider.dart
      injectable_generator|injectable_builder:
        enabled: true
        generate_for:
          - lib/**/application/**/*.dart
          - lib/**/application/*.dart
          - lib/app/di/*.dart
          - lib/core/*.dart
          - lib/core/**/*.dart
          - lib/data/*.dart
          - lib/data/**/*.dart
      stacked_generator:
        enabled: true
        generate_for:
          - lib/app/stacked/app.**.dart
#      stacked_generator:stackedLoggerGenerator:
#        enabled: false
      # Configuring this builder isn't required for most apps. In our case, we
      # want to compile the web worker in `web/worker.dart` to JS and we use the
      # build system for that.
  #      build_web_compilers:entrypoint:
  #        generate_for:
  #          - web/worker.dart
  #        options:
  #          compiler: dart2js
  #        dev_options:
  #          dart2js_args:
  #            - --no-minify
  #        release_options:
  #          dart2js_args:
  #            - -O4
  # JS outputs by the build system are private, we use a `build_to: source` builder
  # afterwards to make them visible in `web/`.
#  copy_js:
#    auto_apply_builders: false
#    dependencies: [$default]
#    builders:
#      ":copy_compiled_worker_js":
#        enabled: true

# build_web_compilers writes a hidden asset, but we want an asset in `web/` for
# flutter to see. So, copy that output. Again, this is not needed for most apps.
#builders:
#  copy_compiled_worker_js:
#    import: "tool/builder.dart"
#    builder_factories: ["CopyCompiledJs.new"]
#    build_to: source
#    build_extensions: { "web/worker.dart.js": ["web/drift_worker.js"] }