// Mocks generated by Mockito 5.4.4 from annotations
// in mass_pro/test/rule_engine_test2.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:expressions/src/evaluator.dart' as _i4;
import 'package:expressions/src/expressions.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Expression].
///
/// See the documentation for Mockito's code generation for more information.
class MockExpression extends _i1.Mock implements _i2.Expression {
  @override
  String toTokenString() => (super.noSuchMethod(
        Invocation.method(
          #toTokenString,
          [],
        ),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.method(
            #toTokenString,
            [],
          ),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.method(
            #toTokenString,
            [],
          ),
        ),
      ) as String);
}

/// A class which mocks [ExpressionEvaluator].
///
/// See the documentation for Mockito's code generation for more information.
class MockExpressionEvaluator extends _i1.Mock
    implements _i4.ExpressionEvaluator {
  @override
  List<_i4.MemberAccessor<dynamic>> get memberAccessors => (super.noSuchMethod(
        Invocation.getter(#memberAccessors),
        returnValue: <_i4.MemberAccessor<dynamic>>[],
        returnValueForMissingStub: <_i4.MemberAccessor<dynamic>>[],
      ) as List<_i4.MemberAccessor<dynamic>>);

  @override
  dynamic eval(
    _i2.Expression? expression,
    Map<String, dynamic>? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #eval,
          [
            expression,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic evalLiteral(
    _i2.Literal? literal,
    Map<String, dynamic>? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #evalLiteral,
          [
            literal,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic evalVariable(
    _i2.Variable? variable,
    Map<String, dynamic>? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #evalVariable,
          [
            variable,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic evalThis(
    _i2.ThisExpression? expression,
    Map<String, dynamic>? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #evalThis,
          [
            expression,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic evalMemberExpression(
    _i2.MemberExpression? expression,
    Map<String, dynamic>? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #evalMemberExpression,
          [
            expression,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic evalIndexExpression(
    _i2.IndexExpression? expression,
    Map<String, dynamic>? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #evalIndexExpression,
          [
            expression,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic evalCallExpression(
    _i2.CallExpression? expression,
    Map<String, dynamic>? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #evalCallExpression,
          [
            expression,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic evalUnaryExpression(
    _i2.UnaryExpression? expression,
    Map<String, dynamic>? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #evalUnaryExpression,
          [
            expression,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic evalBinaryExpression(
    _i2.BinaryExpression? expression,
    Map<String, dynamic>? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #evalBinaryExpression,
          [
            expression,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic evalConditionalExpression(
    _i2.ConditionalExpression? expression,
    Map<String, dynamic>? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #evalConditionalExpression,
          [
            expression,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getMember(
    dynamic obj,
    String? member,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #getMember,
          [
            obj,
            member,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
